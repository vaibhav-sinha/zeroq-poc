{
  "name": "big-time",
  "version": "1.0.6",
  "description": "Big time makes it possible to have a timeout that is longer than 24.8 days (2^31-1 milliseconds).",
  "main": "lib/index.js",
  "scripts": {
    "test": "npm run lint && lab -T test/transformer.js -v -t 90 -a code -m 10000",
    "compile": "babel src --out-dir lib",
    "lint": "eslint src",
    "prepublish": "npm run compile"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/continuationlabs/big-time.git"
  },
  "author": {
    "name": "Continuation Labs"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/continuationlabs/big-time/issues"
  },
  "homepage": "https://github.com/continuationlabs/big-time",
  "devDependencies": {
    "babel": "5.6.x",
    "babel-core": "5.6.x",
    "babel-eslint": "3.1.x",
    "code": "1.x.x",
    "eslint": "0.23.x",
    "eslint-plugin-hapi": "1.x.x",
    "lab": "5.x.x"
  },
  "readme": "# Big-Time\n[![Build Status](https://travis-ci.org/continuationlabs/big-time.svg?branch=master)](https://travis-ci.org/continuationlabs/big-time)\n[![npm](https://img.shields.io/npm/v/big-time.svg)](https://www.npmjs.com/package/big-time)\n\n\nReworking of [long-timeout](https://github.com/tellnes/long-timeout) that has more features, follows correct semver, and has unit tests. Big-Time is a custom timer class to allow really long values into `setTimeout` that are larger than Node would normally support (2^31-1).\n\n## Usage\n\n```js\nvar bt = require('big-time');\n\nbt.setTimeout(function () {\n\n    console.log('if you wait for this, it will eventually log');\n}, Number.MAX_VALUE);\n\nvar timer = bt.setTimeout(function () {\n\n    console.log('shorter');\n}, 1000);\nbt.clearTimeout(timer);\n```\n\n## API\n\n### `bt.setTimeout(callback, delay, [arg1, arg2, arg3,...])`\n\nCreates a new Big-Time timer object and starts the timer where:\n\n- `callback` - the function to execute after `delay` milliseconds has passed. `callback` will be called with `arg1, arg2, arg3...` if they are passed into `setTimeout`, exactly like native `setTimeout`\n- `delay` - the number of milliseconds to wait before executing `callback`. Must be an integer.\n- `[arg1, arg2, arg3,...]` - optional `N` number of extra parameters that will be passed back into `callback`.\n\n### `bt.clearTimeout(timer)`\n\nClears a running Big-Time object.\n",
  "readmeFilename": "README.md",
  "_id": "big-time@1.0.6",
  "dist": {
    "shasum": "2ae65516f033d4f4ef556bc925d54cd95d5df843"
  },
  "_from": "big-time@1.0.x",
  "_resolved": "https://registry.npmjs.org/big-time/-/big-time-1.0.6.tgz"
}
