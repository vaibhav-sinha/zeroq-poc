{
  "name": "seneca-basic",
  "version": "0.3.0",
  "description": "Seneca utility plugin.",
  "main": "basic.js",
  "scripts": {
    "test": "./test.sh",
    "build": "./build.sh"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rjrodger/seneca-basic"
  },
  "keywords": [
    "seneca",
    "plugin",
    "util",
    "utility",
    "basic"
  ],
  "author": {
    "name": "Richard Rodger",
    "url": "http://richardrodger.com"
  },
  "contributors": [
    {
      "name": "Richard Rodger",
      "url": "http://richardrodger.com"
    }
  ],
  "license": "MIT",
  "dependencies": {
    "async": "0.9.2",
    "lodash": "2.4.2",
    "nid": "0.3.2"
  },
  "devDependencies": {
    "docco": "0.6.3",
    "jshint": "2.6.3",
    "mocha": "2.1.0"
  },
  "files": [
    "LICENSE.txt",
    "README.md",
    "basic.js"
  ],
  "readme": "# seneca-basic - a [Seneca](http://senecajs.org) plugin\n\n### Seneca basic utility plugin. \n\nThis plugin is included with the main seneca module and provides a\nsmall set of basic utility action patterns.\n\n\n### Support\n\nIf you're using this module, feel free to contact me on twitter if you\nhave any questions! :) [@rjrodger](http://twitter.com/rjrodger)\n\nCurrent Version: 0.3.0\n\nTested on: Seneca 0.6.2\n\n[![Build Status](https://travis-ci.org/rjrodger/seneca-basic.png?branch=master)](https://travis-ci.org/rjrodger/seneca-basic) \n\nBuilt and tested against versions: `0.10, 0.11, 0.12, iojs`\n\n[Annotated Source Code](http://rjrodger.github.io/seneca-basic/doc/basic.html).\n\n[![Gitter chat](https://badges.gitter.im/rjrodger/seneca-basic.png)](https://gitter.im/rjrodger/seneca-basic)\n\n\n\n## Action Patterns\n\n### `role:basic, note:true, cmd:set`\n\nSet a note value. Notes are a simple internal per-process\ncommunication mechanism for plugins to exchange data. In particular,\nplugins can set keyed values before the plugin that uses the data\nreads it. See [seneca-admin](/rjrodger/seneca-admin) for an example.\n\n_Parameters_\n \n   * `key`:   string; key name\n   * `value`: key value\n\n_Response:_\n\n   * None.\n\n\n### `role:basic, note:true, cmd:get`\n\nGet a note value.\n\n_Parameters_\n \n   * `key`:   string; key name\n\n_Response:_\n\n   * `value`: key value, if defined\n\n\n### `role:basic, note:true, cmd:push`\n\nPush a note value onto a list. The namespace for lists is separate\nfrom the namespace for single values. The list is created if it does not exist.\n\n_Parameters_\n \n   * `key`: string; key name\n   * `value`: value to append to list.\n\n_Response:_\n\n   * None.\n\n\n### `role:basic, note:true, cmd:list`\n\nGet the full list of values for the key, in pushed order.\n\n_Parameters_\n \n   * `key`: string; key name\n\n_Response:_\n\n   * Array of values.\n\n\n### `role:basic, note:true, cmd:pop`\n\nGet the last value of a list, and remove it from the list.\n\n_Parameters_\n \n   * `key`: string; key name\n\n_Response:_\n\n   * `value`: key value, if list was non-empty\n\n\n## Releases\n\n   * 0.3.0: 2015-06-15: Normalized _note_ patterns. Prep for Seneca 0.6.2.\n\n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rjrodger/seneca-basic/issues"
  },
  "_id": "seneca-basic@0.3.0",
  "dist": {
    "shasum": "ba2360e345fa0902ba6e2f3fb75691d33f1b5313"
  },
  "_from": "seneca-basic@0.3.0",
  "_resolved": "https://registry.npmjs.org/seneca-basic/-/seneca-basic-0.3.0.tgz"
}
