{
  "name": "good-http",
  "version": "5.1.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/good-http"
  },
  "description": "Http(s) broadcasting for Good process monitor",
  "main": "lib/index.js",
  "scripts": {
    "test": "lab -m 5000 -t 100 -v -La code",
    "test-cov-html": "lab -m 5000 -r html -o coverage.html -La code"
  },
  "dependencies": {
    "good-squeeze": "2.x.x",
    "hoek": "2.x.x",
    "json-stringify-safe": "5.0.x",
    "lodash.groupby": "3.0.x",
    "wreck": "5.x.x"
  },
  "peerDependencies": {
    "good": ">= 6.x.x"
  },
  "devDependencies": {
    "code": "1.x.x",
    "lab": "5.x.x"
  },
  "engines": {
    "node": ">=0.10.x"
  },
  "license": "BSD-3-Clause",
  "readme": "# good-http\n\nHttp(s) broadcasting for Good process monitor\n\n[![Build Status](https://travis-ci.org/hapijs/good-file.svg?branch=master)](https://travis-ci.org/hapijs/good-file) ![Current Version](https://img.shields.io/npm/v/good-http.svg)\n\nLead Maintainer: [Adam Bretz](https://github.com/arb)\n\n## Usage\n\n`good-http` is a good-reporter implementation to write [hapi](http://hapijs.com/) server events to remote endpoints. It makes a \"POST\" request with a JSON payload to the supplied `endpoint`.\n\n## Good Http\n### GoodHttp (events, config)\n\nCreates a new GoodHttp object where:\n\n- `events` - an object of key value pairs.\n  - `key` - one of the supported [good events](https://github.com/hapijs/good) indicating the hapi event to subscribe to\n  - `value` - a single string or an array of strings to filter incoming events. \"\\*\" indicates no filtering. `null` and `undefined` are assumed to be \"\\*\"\n- `config` - configuration object\n  - `endpoint` - full path to remote server to transmit logs.\n\t- `[threshold]` - number of events to hold before transmission. Defaults to `20`. Set to `0` to have every event start transmission instantly. It is strongly suggested to have a set threshold to make data transmission more efficient.\n  - `[wreck]` - configuration object to pass into [`wreck`](https://github.com/hapijs/wreck#advanced). Defaults to `{ timeout: 60000, headers: {} }`. `content-type` is always \"application/json\".\n  - `mapEvents` - indicates whether to make events an object grouped by the event type and sorted by time.  If false, events is an array of all events, not sorted.  Defaults to `true`.\n\n## Good Http Methods\n### `goodhttp.init(stream, emitter, callback)`\nInitializes the reporter with the following arguments:\n\n- `stream` - a Node readable stream that will be the source of data for this reporter. It is assumed that `stream` is in `objectMode`.\n- `emitter` - an event emitter object.\n- `callback` - a callback to execute when the start function has complete all the necessary set up steps and is ready to receive data.\n\nThen the `stream` emits an \"end\" event, `goodhttp` will transmit any events remaining it it's internal buffer to attempt to prevent data loss.\n\n### Schema\n\nEach POST will match the following schema. Every event will be wrapped inside the `events` key and grouped by the event type and ordered by the timestamp. The payload that is POSTed to the `endpoint` has the following schema:\n\n```json\n{\n  \"host\":\"servername.home\",\n  \"schema\":\"good-http\",\n  \"timeStamp\":1412710565121,\n  \"events\":{\n    \"request\":[\n      {\n        \"event\":\"request\",\n        \"timestamp\":1413464014739,\n        ...\n      },\n      {\n        \"event\":\"request\",\n        \"timestamp\":1414221317758,\n        ...\n      },\n      {\n        \"event\":\"request\",\n        \"timestamp\":1415088216608,\n        ...\n      }\n    ],\n    \"log\":[\n      {\n        \"event\":\"log\",\n        \"timestamp\":1415180913160,\n        ...\n      },\n      {\n        \"event\":\"log\",\n        \"timestamp\":1422493874390,\n        ...\n      }\n    ]\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hapijs/good-http/issues"
  },
  "_id": "good-http@5.1.0",
  "dist": {
    "shasum": "0dfd8d982c243d866da952e283f22cc44d788857"
  },
  "_from": "good-http@",
  "_resolved": "https://registry.npmjs.org/good-http/-/good-http-5.1.0.tgz"
}
